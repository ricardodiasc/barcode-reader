{"version":3,"sources":["components/BarCodeAppBar.tsx","components/BarcodeCardList.tsx","components/barcode.svg","components/BarcodeStartScanButton.tsx","components/Scanner.tsx","components/BarcodeScanner.tsx","utils/Storage.ts","config/defaultCameraConfig.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","BarCodeAppBar","props","classes","useTheme","fullScreen","useMediaQuery","breakpoints","down","useState","openConfig","setOpenConfig","videoDevicesList","setVideoDevicesList","actualConfiguration","activeConfig","setActiveConfig","toogleConfigurationDialog","useLayoutEffect","a","navigator","mediaDevices","enumerateDevices","lDevices","lvd","filter","d","kind","map","videoDevice","deviceId","label","groupId","listVideoDevices","console","log","cameraIndex","AppBar","position","Toolbar","Typography","variant","className","IconButton","color","aria-label","onClick","Dialog","open","onClose","DialogTitle","DialogContent","InputLabel","id","Select","labelId","native","onChange","event","selectedVideoID","target","value","newConstraints","inputStream","constraints","newInputStream","modConfig","vd","key","DialogActions","Button","updateConfig","BarcodeCardList","codeScannerd","Card","elevation","style","marginTop","CardContent","CardHeader","CardActions","setCodeScanner","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","_ref3","x","y","width","height","_ref","svgRef","preserveAspectRatio","viewBox","msTransform","WebkitTransform","transform","ref","ForwardRef","forwardRef","BarcodeStartScanButton","Fab","openScanner","right","bottom","margin","Scanner","scanner","Quagga","config","fromSource","useEffect","toPromise","promise","then","onDetected","catch","onCancel","removeEventListener","stop","BarcodeScanner","openCamera","setOpenCamera","closeCamera","result","codeResult","code","storageWrapper","cb","window","localStorage","persist","object","storage","setItem","JSON","stringify","defaultConfig","frequency","numOfWorkers","locate","name","type","facingMode","area","top","left","decoder","readers","locator","halfSample","patchSize","App","codeScanned","defaultCameraConfig","setConfig","barcodeConfig","item","getItem","parse","loadConfig","newConfig","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.450e4c0d.chunk.js","sourcesContent":["import {\n  Button,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  InputLabel,\n  makeStyles,\n  Select,\n  Theme,\n  Toolbar,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { CameraConfig } from \"../config/ConfigType\";\nimport { VideoInput } from \"./VideoInput\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\ninterface BarCodeAppBarProps {\n  updateConfig: Function;\n  actualConfiguration: CameraConfig;\n}\n\nexport default function BarCodeAppBar(props: BarCodeAppBarProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const [openConfig, setOpenConfig] = useState<boolean>(false);\n\n  const [videoDevicesList, setVideoDevicesList] = useState<VideoInput[]>();\n  const [activeConfig, setActiveConfig] = useState<CameraConfig>(\n    props.actualConfiguration\n  );\n\n  const toogleConfigurationDialog = () => {\n    setOpenConfig(!openConfig);\n  };\n\n  const saveConfig = () => {\n    props.updateConfig(activeConfig);\n    toogleConfigurationDialog();\n  };\n\n  useLayoutEffect(() => {\n    const listVideoDevices = async () => {\n      const lDevices: MediaDeviceInfo[] = await navigator.mediaDevices.enumerateDevices();\n      const lvd: VideoInput[] = lDevices\n        .filter((d: MediaDeviceInfo) => d.kind === \"videoinput\")\n        .map((videoDevice) => {\n          return {\n            deviceId: videoDevice.deviceId,\n            label: videoDevice.label,\n            groupId: videoDevice.groupId,\n          };\n        });\n      setVideoDevicesList(lvd);\n    };\n    listVideoDevices();\n    return () => {\n      console.log(\"Closing\");\n    };\n  }, []);\n\n  let cameraIndex = 0;\n\n  const handleCameraSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const selectedVideoID: string = event.target.value as string;\n\n    const newConstraints = {\n      ...activeConfig.inputStream.constraints,\n      deviceId: selectedVideoID,\n    };\n    const newInputStream = {\n      ...activeConfig.inputStream,\n      constraints: newConstraints,\n    };\n    const modConfig = {\n      ...activeConfig,\n      inputStream: newInputStream,\n    };\n    setActiveConfig(modConfig);\n  };\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Leitor de código de barras\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"config\"\n            className={classes.menuButton}\n            onClick={toogleConfigurationDialog}\n          >\n            <SettingsIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Dialog\n        open={openConfig}\n        onClose={toogleConfigurationDialog}\n        fullScreen={fullScreen}\n      >\n        <DialogTitle>Configurações</DialogTitle>\n        <DialogContent>\n          <InputLabel id=\"select-camera\">Selecione a camera padrão</InputLabel>\n          <Select\n            labelId=\"select-camera\"\n            native\n            onChange={handleCameraSelect}\n            value={props.actualConfiguration.inputStream.constraints.deviceId}\n          >\n            <option value={\"0\"}>---</option>\n            {videoDevicesList?.map((vd) => {\n              cameraIndex++;\n              return (\n                <option key={vd.groupId} value={vd.deviceId}>\n                  {vd.label === \"\" ? `Camera ${cameraIndex}` : vd.label}\n                </option>\n              );\n            })}\n          </Select>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" color=\"primary\" onClick={saveConfig}>\n            Salvar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardHeader,\n  CardActions,\n  IconButton,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\ninterface BarcodeCardListProps {\n  codeScannerd: string;\n  setCodeScanner: React.Dispatch<React.SetStateAction<string>>;\n}\nexport default function BarcodeCardList(props: BarcodeCardListProps) {\n  const clearCodeScaned = () => {\n    props.setCodeScanner(\"\");\n  };\n  return (\n    <>\n      {props.codeScannerd === \"\" ? (\n        <Card elevation={2} style={{ marginTop: \"20px\" }}>\n          <CardContent>\n            <Typography variant=\"body1\">\n              Nenhum código foi lido ainda.\n            </Typography>\n          </CardContent>\n        </Card>\n      ) : (\n        <Card elevation={2} style={{ marginTop: \"20px\" }}>\n          <CardHeader title={\"Codigo lido\"} />\n          <CardContent>\n            <Typography variant=\"body1\">{props.codeScannerd}</Typography>\n          </CardContent>\n          <CardActions>\n            <IconButton\n              color=\"secondary\"\n              aria-label=\"Deletar\"\n              onClick={clearCodeScaned}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </CardActions>\n        </Card>\n      )}\n    </>\n  );\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2 6h2v12H2V6m3 0h1v12H5V6m2 0h3v12H7V6m4 0h1v12h-1V6m3 0h2v12h-2V6m3 0h3v12h-3V6m4 0h1v12h-1V6z\",\n  fill: \"#FFFFFF\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 24,\n  height: 24,\n  fill: \"rgba(0, 0, 0, 0)\"\n});\n\nvar SvgBarcode = function SvgBarcode(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"0 0 24 24\",\n    style: {\n      msTransform: \"rotate(360deg)\",\n      WebkitTransform: \"rotate(360deg)\",\n      transform: \"rotate(360deg)\"\n    },\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBarcode, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/barcode.2183cd00.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { ReactComponent as BarcodeIcon } from \"./barcode.svg\";\n\ninterface IBCProps {\n  openScanner: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}\n\nconst BarcodeStartScanButton = (props: IBCProps) => {\n  return (\n    <Fab\n      color=\"secondary\"\n      onClick={props.openScanner}\n      style={{\n        position: \"fixed\",\n        right: 0,\n        bottom: 0,\n        margin: \"0 1em 1em 1em\",\n      }}\n    >\n      <BarcodeIcon />\n    </Fab>\n  );\n};\n\nexport default BarcodeStartScanButton;\n","import React, { useEffect } from \"react\";\nimport Quagga from \"quagga\";\nimport { InputStream } from \"../config/ConfigType\";\n\ninterface ScannerProps {\n  onDetected: Function;\n  onCancel: Function;\n  config: {\n    inputStream: InputStream;\n  };\n}\n\nconst Scanner = (props: ScannerProps) => {\n  const handleClose = () => {\n    scanner.removeEventListener(\"detected\", props.onDetected).stop();\n    props.onCancel();\n  };\n\n  const scanner = Quagga.config(props.config).fromSource({\n    ...props.config.inputStream,\n    target: \".overlay__content\",\n  });\n\n  useEffect(() => {\n    const scannerPromisse: any = scanner.toPromise();\n    scannerPromisse.promise.then(props.onDetected).catch(props.onCancel);\n\n    return () => {\n      handleClose();\n    };\n  }, []);\n\n  return (\n    <div className=\"overlay__content\">\n      <video style={{ width: \"95%\", height: \"95%\" }}></video>\n    </div>\n  );\n};\n\nexport default Scanner;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport BarcodeStartScanButton from \"./BarcodeStartScanButton\";\nimport Scanner from \"./Scanner\";\nimport { CameraConfig } from \"../config/ConfigType\";\ninterface BarcodeScannerProps {\n  setCodeScanner: React.Dispatch<React.SetStateAction<string>>;\n  activeConfig: CameraConfig;\n}\n\nconst BarcodeScanner = (props: BarcodeScannerProps) => {\n  const [openCamera, setOpenCamera] = useState(false);\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const closeCamera = () => {\n    setOpenCamera(false);\n  };\n  const openScanner = () => {\n    setOpenCamera(true);\n  };\n\n  const handleScanResult = (result: any) => {\n    if (result) {\n      closeCamera();\n      props.setCodeScanner(result.codeResult.code);\n    }\n  };\n\n  const stopScan = () => {\n    closeCamera();\n  };\n\n  return (\n    <>\n      <Dialog open={openCamera} onClose={closeCamera} fullScreen={fullScreen}>\n        <DialogTitle id=\"barcode-camera-dialog\">{\"Camera\"}</DialogTitle>\n        <DialogContent>\n          <Scanner\n            config={props.activeConfig}\n            onDetected={handleScanResult}\n            onCancel={stopScan}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" variant=\"contained\" onClick={closeCamera}>\n            Fechar\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <BarcodeStartScanButton openScanner={openScanner} />\n    </>\n  );\n};\n\nexport default BarcodeScanner;\n","function storageWrapper(cb: Function) {\n  if (typeof window.localStorage !== \"undefined\") {\n    return cb(window.localStorage);\n  } else {\n    console.log(\"localStorage not available\");\n  }\n}\n\nexport function persist(key: string, object: object) {\n  storageWrapper((storage: Storage) => {\n    storage.setItem(key, JSON.stringify(object));\n  });\n}\n\nexport function push(key: string, object: object) {\n  storageWrapper((storage: Storage) => {\n    const item: string = storage.getItem(key) || \"[]\",\n      parsed = JSON.parse(item);\n    if (Array.isArray(parsed)) {\n      parsed.push(object);\n      storage.setItem(key, JSON.stringify(parsed));\n    }\n  });\n}\n\nexport function load(key: string) {\n  return storageWrapper((storage: Storage) => {\n    const item = storage.getItem(key);\n    if (item) {\n      return JSON.parse(item);\n    }\n    return null;\n  });\n}\n","const defaultConfig = {\n  frequency: 5,\n  numOfWorkers: 2,\n  locate: true,\n  inputStream: {\n    name: \"Live\",\n    type: \"LiveStream\",\n    constraints: {\n      width: 800,\n      height: 600,\n      deviceId:\n        \"904ee42c2e57a164e7d04af030736360d6e47195c9bf9dea84cf86b5c47cbf3c\",\n      facingMode: \"environment\",\n    },\n    area: {\n      top: \"0%\",\n      right: \"0%\",\n      left: \"0%\",\n      bottom: \"0%\",\n    },\n  },\n  decoder: {\n    readers: [\"ean_reader\", \"code_39_reader\", \"code_128_reader\"],\n  },\n  locator: {\n    halfSample: true,\n    patchSize: \"medium\",\n  },\n};\n\nexport default defaultConfig;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\nimport BarCodeAppBar from \"./BarCodeAppBar\";\nimport BarcodeCardList from \"./BarcodeCardList\";\nimport BarcodeScanner from \"./BarcodeScanner\";\nimport { load, persist } from \"../utils/Storage\";\nimport defaultCameraConfig from \"../config/defaultCameraConfig\";\nimport { CameraConfig } from \"../config/ConfigType\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n  })\n);\n\nconst App = () => {\n  const classes = useStyles();\n  const [codeScanned, setCodeScanner] = useState(\"\");\n  const [config, setConfig] = useState(defaultCameraConfig);\n  useEffect(() => {\n    const loadConfig = () => {\n      const barcodeConfig = load(\"barcode-config\");\n      if (!barcodeConfig) {\n        persist(\"barcode-config\", defaultCameraConfig);\n        setConfig(defaultCameraConfig);\n      } else {\n        setConfig(barcodeConfig);\n      }\n    };\n\n    loadConfig();\n    return () => {};\n  }, []);\n\n  const updateConfig = (newConfig: CameraConfig): object => {\n    persist(\"barcode-config\", newConfig);\n    setConfig(newConfig);\n    return newConfig;\n  };\n\n  return (\n    <div className={classes.root}>\n      <BarCodeAppBar updateConfig={updateConfig} actualConfiguration={config} />\n      <BarcodeCardList\n        setCodeScanner={setCodeScanner}\n        codeScannerd={codeScanned}\n      />\n      <BarcodeScanner setCodeScanner={setCodeScanner} activeConfig={config} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n// serviceWorker.unregister();\n"],"sourceRoot":""}